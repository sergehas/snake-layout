body {
    font: 400 14px "Arial", sans-serif;
    counter-reset: num;
    box-sizing: border-box;
}

:root {
    --grid-v-gap: 20px;
    --grid-h-gap: 20px;
    --line-thickness: 5px;
}

.flex-container {
    /* width: 500px; */
    background: orange;
    display: grid;
    /*define the number of column*/
    grid-auto-flow: dense;
    /* this is important to fill all the space*/
    grid-row-gap: var(--grid-v-gap);
    grid-column-gap: var(--grid-h-gap);
    /* padding: 10px; */
    margin-right: var(--grid-h-gap);
    margin-left: var(--grid-h-gap);
}

.item {
    background: black;
    height: 80px;
    line-height: 80px;
    color: white;
    font-weight: bold;
    font-size: 2em;
    text-align: center;
    position: relative;
}

/* .item:before {
    content: counter(num);
    counter-increment: num;
  } */

.zitem:after {
    content: "";
    display: block;
    position: absolute;
    z-index: 1;
    top: 50%;
    left: 50%;
    transform: translateY(-50%);
    width: calc(100% + var(--grid-h-gap));
    height: 0px;
    border-bottom: var(--line-thickness) solid darkgray;
}

@mixin gridify($cols) {
    .flex-container {
        grid-template-columns: repeat($cols, 1fr);
    }

    @for $i from 0 through $cols - 1 {
        // even line items (display order: from right to left)
        .item:nth-child(#{$cols * 2}n + #{$cols + 1 + $i}) {
            background-color: darkgray;
            grid-column: #{$cols - $i};
            &:before {
                content: "";
                display: block;
                position: absolute;
                z-index: 1;
                top: 50%;
                right: 100%;
                transform: translateY(-50%);
                width: calc(0% + var(--grid-h-gap));
                height: 0px;
                border-bottom: var(--line-thickness) solid gray;
            }
        }
        // odd line items (display order: from left to right)
        .item:nth-child(#{$cols * 2}n + #{ $i + 1} ) {
            //background-color: darkgray;
            &:after {
                content: "";
                display: block;
                position: absolute;
                z-index: 1;
                bottom: 50%;
                left: 100%;
                transform: translateY(-50%);
                width: calc(0% + var(--grid-h-gap));
                height: 0px;
                border-bottom: var(--line-thickness) solid white;
            }
        }
    }

    // end & start of lines
    /*odd line last visually (right): from even line right top to bottom line right  (the -| line)*/
    .item:nth-child(#{$cols * 2}n + #{$cols}) {
        background-color: darkgreen;
        &:after {
            content: "";
            display: block;
            position: absolute;
            z-index: 1;
            top: 50%;
            left: 100%;
            transform: translateY(calc(-0.5 * var(--line-thickness)));
            border: var(--line-thickness) solid green;
            border-top-right-radius: calc(var(--grid-h-gap) * 2);
            border-left: none;
            border-bottom: none;
            width: calc(var(--grid-h-gap));
            height: calc((100% + var(--grid-v-gap)) * 0.5);
        }
    }
    /*odd line last visually (right): from odd line right bottom to even line right  (the _| line*/
    .item:nth-child(#{$cols * 2}n + #{$cols + 1}) {
        background-color: darkmagenta;
        &:after {
            content: "";
            display: block;
            position: absolute;
            z-index: 1;
            bottom: 50%;
            left: 100%;
            transform: translateY(calc(0.5 * var(--line-thickness)));
            border: var(--line-thickness) solid magenta;
            border-bottom-right-radius: calc(var(--grid-h-gap) * 2);
            border-left: none;
            border-top: none;
            width: calc(0% + var(--grid-h-gap));
            height: calc((100% + var(--grid-v-gap)) * 0.5);
        }
    }

    /*even line 1st visually (left): from even line left  to odd line right  (the |- line*/
    .item:nth-child(#{$cols * 2}n) {
        background-color: darkred;
        &:before {
            content: "";
            display: block;
            position: absolute;
            z-index: 1;
            top: 50%;
            right: 100%;
            transform: translateY(calc(-0.5 * var(--line-thickness)));
            border: var(--line-thickness) solid red;
            border-top-left-radius: calc(var(--grid-h-gap) * 2);
            border-right: none;
            border-bottom: none;
            width: calc(0% + var(--grid-h-gap));
            height: calc((100% + var(--grid-v-gap)) * 0.5);
        }
    }
    /*odd line 1st visually (left): from even line left bottom to odd line left  (the |_ line*/
    .item:nth-child(#{$cols *2}n + 1) {
        background-color: darkblue;
        &:before {
            content: "";
            display: block;
            position: absolute;
            z-index: 1;
            bottom: 50%;
            right: 100%;
            transform: translateY(calc(0.5 * var(--line-thickness)));
            border: var(--line-thickness) solid blue;
            border-bottom-left-radius: calc(var(--grid-h-gap) * 2);
            border-right: none;
            border-top: none;
            width: calc(0% + var(--grid-h-gap));
            height: calc((100% + var(--grid-v-gap)) * 0.5);
        }
    }

    .item:first-child:before {
        border: none;
    }
    .zitem:last-child:after {
        border: none;
    }
}

@media screen and (max-width: 200px) {
    @include gridify(1);
}

@media screen and (min-width: 201px) and (max-width: 300px) {
    @include gridify(2);
}

@media screen and (min-width: 301px) and (max-width: 460px) {
    @include gridify(3);
}

@media screen and (min-width: 461px) and (max-width: 720px) {
    @include gridify(4);
}

@media screen and (min-width: 721px) and (max-width: 960px) {
    @include gridify(5);
}
@media screen and (min-width: 961px) and (max-width: 1080px) {
    @include gridify(6);
}

@media screen and (min-width: 1081px) {
    @include gridify(7);
}
